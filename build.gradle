apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'scala'

sourceCompatibility= JavaVersion.VERSION_1_7

// See http://gradle.org/docs/current/userguide/gradle_wrapper.html
task wrap(type:Wrapper, description:"create a gradlew") {
    gradleVersion = '1.0-rc-3'
}

repositories {
  mavenCentral()

  // For Groovy/GPars
  maven {
    url 'http://snapshots.repository.codehaus.org/'
  }

  // For Scala/Akka
  maven {
    url 'http://repo.typesafe.com/typesafe/releases'
  }

  // For Twitter Finagle/Util
  maven {
    url 'http://maven.twttr.com/'
  }
}

dependencies {
  compile group: 'com.google.guava', name: 'guava', version: '12.0'

  // Libraries for Google Caliper
  // There is no official maven version yet so we stash the libs locally
  compile fileTree(dir: 'caliper-lib', include: '*.jar')

  // Libraries for Groovy
  groovy group: 'org.codehaus.gpars', name:'gpars', version:'1.0-SNAPSHOT'
  groovy group: 'org.codehaus.groovy', name: 'groovy-all', version: '1.8.6'

  // Libraries needed to run the scala tools
  scalaTools group: 'org.scala-lang', name:'scala-compiler', version:'2.9.1'
  scalaTools group: 'org.scala-lang', name:'scala-library', version:'2.9.1'

  // Libraries needed for Scala
  compile group: 'org.scala-lang', name:'scala-library', version:'2.9.1'

  // Libraries for Akka
  compile group: 'com.typesafe.akka', name:'akka-actor', version:'2.0.1'

  // Libraries for Finagle/Util
  compile group: 'com.twitter', name:'util-core_2.9.1', version:'4.0.1'
}

// The benchmark requires files from Java, Scala and Groovy. Thus, it requires some
// setup to get it to compile and run
sourceSets {
  benchmark {
    java {
      srcDir 'src/main/benchmark'
    }
    compileClasspath = sourceSets.main.compileClasspath + sourceSets.main.runtimeClasspath
  }
}

sourceSets.benchmark.runtimeClasspath.each { it -> println it }

task(runBenchmark, dependsOn: [compileJava, compileScala, compileGroovy, compileBenchmarkJava], type: JavaExec) {
  main = 'edu.illinois.nchen.benchmark.FuturesBenchmark'
  classpath = sourceSets.benchmark.runtimeClasspath + sourceSets.main.runtimeClasspath
}

